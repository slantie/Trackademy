// Trackademy Prisma schema file - Version 4

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  STUDENT
  FACULTY
  ADMIN
}

enum Designation {
  HOD
  PROFESSOR
  ASST_PROFESSOR
  LAB_ASSISTANT
}

enum SemesterType {
  ODD
  EVEN
}

enum SubjectType {
  MANDATORY
  ELECTIVE
}

enum LectureType {
  THEORY
  PRACTICAL
}

model College {
  id            String         @id @default(cuid())
  name          String         @unique
  abbreviation  String         @unique
  isDeleted     Boolean        @default(false)
  departments   Department[]
  academicYears AcademicYear[]

  @@map("colleges")
}

model Department {
  id           String     @id @default(cuid())
  name         String
  abbreviation String
  collegeId    String
  isDeleted    Boolean    @default(false)
  college      College    @relation(fields: [collegeId], references: [id])
  subjects     Subject[]
  faculties    Faculty[]
  semesters    Semester[]
  students     Student[]

  @@unique([collegeId, name])
  @@index([collegeId])
  @@map("departments")
}

model Subject {
  id             String      @id @default(cuid())
  name           String
  abbreviation   String
  code           String
  type           SubjectType @default(MANDATORY)
  semesterNumber Int
  isDeleted      Boolean     @default(false)
  departmentId   String
  department     Department  @relation(fields: [departmentId], references: [id])
  courses        Course[]

  @@unique([code, departmentId])
  @@index([departmentId])
  @@map("subjects")
}

model Faculty {
  id           String      @id @default(cuid())
  fullName     String
  designation  Designation
  abbreviation String?
  joiningDate  DateTime?
  isDeleted    Boolean     @default(false)
  userId       String      @unique
  user         User        @relation(fields: [userId], references: [id])
  departmentId String
  department   Department  @relation(fields: [departmentId], references: [id])
  courses      Course[]

  @@index([departmentId])
  @@map("faculties")
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  role     Role
  student  Student?
  faculty  Faculty?

  @@map("users")
}

model AcademicYear {
  id        String     @id @default(cuid())
  year      String     @unique
  isActive  Boolean    @default(false)
  isDeleted Boolean    @default(false)
  collegeId String
  college   College    @relation(fields: [collegeId], references: [id])
  semesters Semester[]

  @@index([collegeId])
  @@map("academic_years")
}

model Semester {
  id             String       @id @default(cuid())
  semesterNumber Int
  semesterType   SemesterType
  departmentId   String
  academicYearId String
  isDeleted      Boolean      @default(false)
  department     Department   @relation(fields: [departmentId], references: [id])
  academicYear   AcademicYear @relation(fields: [academicYearId], references: [id])
  divisions      Division[]
  courses        Course[]
  students       Student[]

  @@unique([academicYearId, departmentId, semesterNumber])
  @@index([departmentId])
  @@index([academicYearId])
  @@map("semesters")
}

model Division {
  id         String    @id @default(cuid())
  name       String
  semesterId String
  isDeleted  Boolean   @default(false)
  semester   Semester  @relation(fields: [semesterId], references: [id])
  students   Student[]
  courses    Course[]

  @@unique([name, semesterId])
  @@index([semesterId])
  @@map("divisions")
}

model Course {
  id          String      @id @default(cuid())
  lectureType LectureType
  batch       String?
  isDeleted   Boolean     @default(false)

  subjectId String
  subject   Subject @relation(fields: [subjectId], references: [id])

  facultyId String
  faculty   Faculty @relation(fields: [facultyId], references: [id])

  semesterId String
  semester   Semester @relation(fields: [semesterId], references: [id])

  divisionId String
  division   Division @relation(fields: [divisionId], references: [id])

  enrollments StudentEnrollment[]

  @@unique([subjectId, facultyId, semesterId, divisionId, lectureType, batch])
  @@index([subjectId])
  @@index([facultyId])
  @@index([semesterId])
  @@index([divisionId])
  @@map("courses")
}

model StudentEnrollment {
  id        String  @id @default(cuid())
  studentId String
  student   Student @relation(fields: [studentId], references: [id])

  courseId String
  course   Course @relation(fields: [courseId], references: [id])

  @@unique([studentId, courseId])
  @@index([studentId])
  @@index([courseId])
  @@map("student_enrollments")
}

model Student {
  id               String  @id @default(cuid())
  enrollmentNumber String  @unique
  fullName         String
  batch            String
  isDeleted        Boolean @default(false)
  userId           String  @unique
  user             User    @relation(fields: [userId], references: [id])

  departmentId String
  semesterId   String
  divisionId   String

  department Department @relation(fields: [departmentId], references: [id])
  semester   Semester   @relation(fields: [semesterId], references: [id])
  division   Division   @relation(fields: [divisionId], references: [id])

  enrollments StudentEnrollment[]

  @@index([departmentId])
  @@index([semesterId])
  @@index([divisionId])
  @@map("students")
}
